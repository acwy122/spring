<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- 在进行框架配置的时候，可以使用xml文件，也可以使用注解的方式
     很多同学觉得xml的方式比较麻烦，但是xml的配置方式还是要学习的，因为在项目开发过程中
     很多情况下是xml和注解一起工作，而且xml配置的方式比较完整
     -->

    <!--<bean id="person" class="com.mashibing.bean.Person">-->
    <!-- 由单例变为多例 -->
    <!-- 根据属性值设置的时候，name的名称取决于set方法后面的参数首字母小写的名称 -->
    <!--
     name:表示参数列表的名称
     value：表示实际的具体值
     type：表示值的类型
     index：表示值的下表，从0开始
     -->
    <bean id="person" class="com.mashibing.bean.Person" scope="prototype">
        <property name="id" value="1"></property>
        <property name="age" value="26"></property>
        <property name="name" value="zhangsan"></property>
        <property name="gender" value="男"></property>
    </bean>

    <!--<bean id="person2" class="com.mashibing.bean.Person" scope="prototype">
        <property name="id" value="12"></property>
        <property name="age" value="26"></property>
        <property name="name" value="zhangsan"></property>
        <property name="gender" value="女"></property>
    </bean>-->
    <!-- 使用构造器方法复制的时候，参数的那么属性是由什么来决定的？由构造方法的参数名称决定的-->
    <bean id="person2" class="com.mashibing.bean.Person">
        <constructor-arg name="id" value="2"></constructor-arg>
        <constructor-arg name="name" value="lisi"></constructor-arg>
        <constructor-arg name="age" value="22"></constructor-arg>
        <constructor-arg name="gender" value="男"></constructor-arg>
    </bean>
    <!-- 当通过构造器方法赋值的时候，可以把name属性省略不屑，但是要注意必须要保证参数值跟构造器的参数列表的顺序一致 -->
    <bean id="person3" class="com.mashibing.bean.Person">
        <constructor-arg  value="2"></constructor-arg>
        <constructor-arg  value="lisi" index="3"></constructor-arg>
        <constructor-arg  value="22"></constructor-arg>
        <constructor-arg  value="男" index="1"></constructor-arg>
    </bean>
    <!-- 当有多个相同参数的构造方法存在的时候，默认情况下时覆盖的过程，后面的构造方法会覆盖前面的构造方法
    如果非要复制给另外一个构造方法的话，可以使用type的参数来进行指定
    -->
    <bean id="person4" class="com.mashibing.bean.Person">
        <constructor-arg  value="2"></constructor-arg>
        <constructor-arg  value="王五"></constructor-arg>
        <constructor-arg  value="22" type="java.lang.Integer"></constructor-arg>
    </bean>

    <!--
    总结：在日常工作中，一般都是用name，value的方式，很少有人去使用index或者type的方式，但是要注意各种情况出现的问题
    -->
</beans>